<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nio`s Blog</title>
    <link>https://nio755.github.io/</link>
    <description>Recent content on nio`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 29 Apr 2020 16:09:54 +0800</lastBuildDate>
    
	<atom:link href="https://nio755.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>双线性图像缩放(Bilinear Image Scaling)</title>
      <link>https://nio755.github.io/posts/algorithm/bilinear-interpolation/</link>
      <pubDate>Wed, 29 Apr 2020 16:09:54 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/algorithm/bilinear-interpolation/</guid>
      <description>介绍 对比最近邻插值，双线性插值是基于周围像素来产生更平滑的缩放比例，通过取原图像中距离目标像素点最近的4个点，并对这4个点与其对应权值的乘积</description>
    </item>
    
    <item>
      <title>最近邻插值图片缩放(Nearest Neighbor Image Scaling)</title>
      <link>https://nio755.github.io/posts/algorithm/nearest-neighbor-interpolation/</link>
      <pubDate>Sat, 25 Apr 2020 17:42:17 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/algorithm/nearest-neighbor-interpolation/</guid>
      <description>介绍 最近邻图像缩放(插值)算法是最简单、最快的图像缩放技术。当主要关心速度时，该算法非常有用。更加复杂的缩放算法有：双线性(bilinear</description>
    </item>
    
    <item>
      <title>Protocol Buffers 使用</title>
      <link>https://nio755.github.io/posts/grpc/protocol-buffers%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 20 Apr 2020 09:08:15 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/grpc/protocol-buffers%E5%9F%BA%E7%A1%80/</guid>
      <description>定义消息类型 分配字段编号 指定字段规则 添加注释 .proto 产生了什么? 默认值 标量值类型(基本类型) 保留字段 枚举(Enumerations) 枚举保留值 使用</description>
    </item>
    
    <item>
      <title>在 vmware 中使用 kubeadm 搭建 Kubernetes 集群</title>
      <link>https://nio755.github.io/posts/k8s/k8s%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 20 Apr 2020 09:08:00 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/k8s/k8s%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>部署环境 安装 kubeadm,kubelet,kubectl(当前版本 1.17.3) 关闭防火墙 关闭 swap 安装 docker(当前版本 19.03.4) 安装方法 方法 1-官方安装步</description>
    </item>
    
    <item>
      <title>GoLang 逃逸分析</title>
      <link>https://nio755.github.io/posts/golang/golang%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 19 Apr 2020 20:44:45 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/golang/golang%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</guid>
      <description>介绍 逃逸场景 指针逃逸 栈空间不足逃逸（空间开辟过大） 动态类型逃逸（不确定长度大小） 闭包引用对象逃逸 逃逸分析的作用 逃逸总结 函数传递指针真的比传值</description>
    </item>
    
    <item>
      <title>Desc</title>
      <link>https://nio755.github.io/about/desc/</link>
      <pubDate>Sun, 19 Apr 2020 20:44:07 +0800</pubDate>
      
      <guid>https://nio755.github.io/about/desc/</guid>
      <description>Hi, my name is nio.
This is my blog.</description>
    </item>
    
  </channel>
</rss>