<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on nio`s Blog</title>
    <link>https://nio755.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on nio`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 29 Apr 2020 16:09:54 +0800</lastBuildDate>
    
	<atom:link href="https://nio755.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>双线性图像缩放(Bilinear Image Scaling)</title>
      <link>https://nio755.github.io/posts/algorithm/bilinear-interpolation/</link>
      <pubDate>Wed, 29 Apr 2020 16:09:54 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/algorithm/bilinear-interpolation/</guid>
      <description>介绍 对比最近邻插值，双线性插值是基于周围像素来产生更平滑的缩放比例，通过取原图像中距离目标像素点最近的4个点，并对这4个点与其对应权值的乘积</description>
    </item>
    
    <item>
      <title>最近邻插值图片缩放(Nearest Neighbor Image Scaling)</title>
      <link>https://nio755.github.io/posts/algorithm/nearest-neighbor-interpolation/</link>
      <pubDate>Sat, 25 Apr 2020 17:42:17 +0800</pubDate>
      
      <guid>https://nio755.github.io/posts/algorithm/nearest-neighbor-interpolation/</guid>
      <description>介绍 最近邻图像缩放(插值)算法是最简单、最快的图像缩放技术。当主要关心速度时，该算法非常有用。更加复杂的缩放算法有：双线性(bilinear</description>
    </item>
    
  </channel>
</rss>